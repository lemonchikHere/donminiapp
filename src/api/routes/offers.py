from fastapi import APIRouter, Depends, status, Form, UploadFile
from typing import Optional
from sqlalchemy.orm import Session
from typing import List, Optional
from datetime import datetime
from pydantic import BaseModel

from src.database import get_db
from src.config import settings
from aiogram import Bot

router = APIRouter(prefix="/api/offers", tags=["Offers"])

@router.post("/", status_code=status.HTTP_202_ACCEPTED)
async def create_offer(
@router.post("/", status_code=status.HTTP_201_CREATED)
async def create_offer_with_upload(
    transactionType: str = Form(...),
    propertyType: str = Form(...),
    address: str = Form(...),
    name: str = Form(...),
    phone: str = Form(...),
    area: Optional[str] = Form(None),
    floors: Optional[str] = Form(None),
    rooms: Optional[str] = Form(None),
    price: Optional[str] = Form(None),
    description: Optional[str] = Form(None),
    photos: List[UploadFile] = File([]),
    video: Optional[UploadFile] = File(None),
    db: Session = Depends(get_db),
):
    """
    Accepts a new property offer from a user via a form and notifies the admin.
    """
    bot = Bot(token=settings.BOT_TOKEN)

    message = (
        f"üè† –ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞!\n\n"
        f"**–¢–∏–ø —Å–¥–µ–ª–∫–∏:** {transactionType}\n"
        f"**–¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:** {propertyType}\n"
        f"**–ê–¥—Ä–µ—Å:** {address}\n"
        f"**–ö–æ–º–Ω–∞—Ç:** {rooms or 'N/A'}\n"
        f"**–ü–ª–æ—â–∞–¥—å:** {area or 'N/A'} –º¬≤\n"
        f"**–≠—Ç–∞–∂:** {floors or 'N/A'}\n"
        f"**–¶–µ–Ω–∞:** ${price or 'N/A'}\n\n"
        f"**–û–ø–∏—Å–∞–Ω–∏–µ:**\n{description or '–ù–µ—Ç'}\n\n"
        f"--- –ö–æ–Ω—Ç–∞–∫—Ç—ã ---\n"
        f"**–ò–º—è:** {name}\n"
        f"**–¢–µ–ª–µ—Ñ–æ–Ω:** {phone}"
    )

    if settings.ADMIN_CHAT_ID:
        try:
            await bot.send_message(
                chat_id=settings.ADMIN_CHAT_ID,
                text=message,
                parse_mode="Markdown"
            )
        finally:
            await bot.session.close()

    return {"status": "accepted"}
